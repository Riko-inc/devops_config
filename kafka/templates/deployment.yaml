apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafka.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{ include "kafka.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ include "kafka.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{ include "kafka.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: kafka
          image: "{{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}"
          imagePullPolicy: {{ .Values.kafka.image.pullPolicy }}
          env:
            - name: KAFKA_CFG_NODE_ID
              value: "{{ .Values.kafka.nodeId }}"
            - name: KAFKA_KRAFT_CLUSTER_ID
              value: "{{ .Values.kafka.clusterId }}"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "{{ .Values.kafka.processRoles }}"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "{{ .Values.kafka.controllerQuorumVoters }}"
            - name: KAFKA_CFG_SUPER_USERS
              value: "{{ .Values.kafka.superUsers }}"
            - name: KAFKA_CFG_LISTENERS
              value: "INTERNAL://:{{ .Values.kafka.service.internalPort }},EXTERNAL://:{{ .Values.kafka.service.external.port }},CONTROLLER://:9093"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "{{ printf \"INTERNAL://%s:%d,EXTERNAL://%s:%d\" (include \"kafka.fullname\" .) .Values.kafka.service.internalPort (include \"kafka.fullname\" .) .Values.kafka.service.external.port }}"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "{{ .Values.kafka.listenerSecurityProtocolMap }}"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "{{ .Values.kafka.controllerListenerNames }}"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "{{ .Values.kafka.interBrokerListenerName }}"
          ports:
            - name: internal
              containerPort: {{ .Values.kafka.service.internalPort }}
            - name: external
              containerPort: {{ .Values.kafka.service.external.port }}
            - name: metrics
              containerPort: {{ .Values.kafka.service.metricsPort }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.kafka.service.internalPort }}
            initialDelaySeconds: {{ .Values.kafka.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.kafka.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.kafka.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.kafka.readinessProbe.failureThreshold }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.kafka.service.internalPort }}
            initialDelaySeconds: {{ .Values.kafka.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.kafka.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.kafka.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.kafka.livenessProbe.failureThreshold }}