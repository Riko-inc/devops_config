apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  namespace: "services"
spec:
  serviceName: {{ .Chart.Name }}-headless
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: kafka
          image: "{{ .Values.image }}:{{ .Values.tag }}"
          env:
            - name: KAFKA_ENABLE_KRAFT
              value: "yes"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "{{ .Values.kraft.processRoles }}"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "{{ .Values.kraft.controllerQuorumVoters }}"
            - name: KAFKA_CFG_NODE_ID
              value: "{{ .Values.kraft.nodeId }}"
            - name: KAFKA_CFG_LISTENERS
              value: "{{ .Values.kraft.listeners }}"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "{{ .Values.kraft.advertisedListeners }}"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
          ports:
            - containerPort: 9092
              name: client
            - containerPort: 9093
              name: controller
          volumeMounts:
            - name: data
              mountPath: /bitnami/kafka
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
  volumeClaimTemplates:
  {{- if .Values.persistence.enabled }}
  - metadata:
      name: data
    spec:
      accessModes: {{ .Values.persistence.accessModes }}
      storageClassName: {{ .Values.persistence.storageClass | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
  {{- else }}
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: ""
      resources:
        requests:
          storage: 1Gi
  {{- end }}