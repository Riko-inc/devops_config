apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ml-service.name" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ include "ml-service.name" . }}
  annotations:
    commit: "{{ .Values.annotations.commit }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "ml-service.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "ml-service.name" . }}
    spec:
      containers:
        - name: {{ include "ml-service.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          envFrom:
            - configMapRef:
                name: postgres-config
            - configMapRef:
                name: redis-config
            - configMapRef:
                name: "{{ .Values.service.name }}-config"
            - configMapRef:
                name: global-config
            - configMapRef:
                name: ml-secret-config
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 60
            periodSeconds: 5
          resources:
            requests:
              memory: "350Mi"
              cpu: "100m"
            limits:
              memory: "450Mi"
              cpu: "200m"
